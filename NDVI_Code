## Here is the Javascript code I used to get the NDVI  and precipitation
// === STEP 1: Load Admin Boundaries and Filter Northern Governorates ===
var gaul1 = ee.FeatureCollection('FAO/GAUL/2015/level1');
var northSyria = gaul1.filter(ee.Filter.and(
  ee.Filter.eq('ADM0_NAME', 'Syrian Arab Republic'),
  ee.Filter.or(
    ee.Filter.eq('ADM1_NAME', 'Aleppo'),
    ee.Filter.eq('ADM1_NAME', 'Hassakeh'),
    ee.Filter.eq('ADM1_NAME', 'Raqqa'),
    ee.Filter.eq('ADM1_NAME', 'Idleb'),
    ee.Filter.eq('ADM1_NAME', 'Dayr_Az_Zor')
  )
));
var region = northSyria.union().geometry();
Map.centerObject(region, 7);

// === STEP 2: Create 5Ã—5 km Grid ===
var gridSize = 0.045;
var latlon = ee.Image.pixelLonLat();
var lonGrid = latlon.select('longitude').divide(gridSize).floor();
var latGrid = latlon.select('latitude').divide(gridSize).floor();
var binImage = lonGrid.multiply(1e5).add(latGrid).toInt64().clip(region);

var gridVectors = binImage.reduceToVectors({
  geometry: region,
  geometryType: 'polygon',
  scale: 5000,
  maxPixels: 1e13,
  bestEffort: true,
  reducer: ee.Reducer.countEvery()
});

var gridWithId = gridVectors.map(function(f) {
  var coords = f.geometry().centroid(10).coordinates();
  var lon = ee.Number(coords.get(0)).format('%.4f');
  var lat = ee.Number(coords.get(1)).format('%.4f');
  var id = lon.cat('_').cat(lat);
  return f.set('cell_id', id);
});

// === STEP 3: Add ADM1/ADM2 Info ===
var adm1 = ee.FeatureCollection('FAO/GAUL/2015/level1')
  .filter(ee.Filter.eq('ADM0_NAME', 'Syrian Arab Republic'));
var adm2 = ee.FeatureCollection('FAO/GAUL/2015/level2')
  .filter(ee.Filter.eq('ADM0_NAME', 'Syrian Arab Republic'));

var addAdminInfo = function(feature) {
  var cellGeom = feature.geometry();
  var adm1Name = adm1.filterBounds(cellGeom).first().get('ADM1_NAME');
  var adm2Name = adm2.filterBounds(cellGeom).first().get('ADM2_NAME');
  return feature.set({'ADM1_NAME': adm1Name, 'ADM2_NAME': adm2Name});
};

var enrichedGrid = gridWithId.map(addAdminInfo);

// === STEP 4: Load Land Cover Once (static, fast) ===
var landcoverImage = ee.ImageCollection("MODIS/006/MCD12Q1")
  .filterDate('2020-01-01', '2020-12-31')
  .first()
  .select('LC_Type1')
  .rename('landcover')
  .clip(region);

// === STEP 5: Iterate by Month Using Fast MODIS NDVI + CHIRPS ===
var start = ee.Date('2017-01-01');
var end = ee.Date('2023-01-01');
var months = ee.List.sequence(0, end.difference(start, 'month').subtract(1));

var monthlyResults = months.map(function(m) {
  var startMonth = start.advance(m, 'month');
  var endMonth = startMonth.advance(1, 'month');

  var ndvi = ee.ImageCollection("MODIS/061/MOD13A3")
    .filterDate(startMonth, endMonth)
    .select("NDVI")
    .map(function(img) {
      return img.multiply(0.0001).rename("NDVI");
    })
    .mean()
    .clip(region);

  var precip = ee.ImageCollection("UCSB-CHG/CHIRPS/DAILY")
    .filterDate(startMonth, endMonth)
    .sum()
    .rename("precip")
    .clip(region);

  var combined = ndvi.addBands(precip).addBands(landcoverImage);

  var reduced = combined.reduceRegions({
    collection: enrichedGrid,
    reducer: ee.Reducer.mean(),
    scale: 1000
  }).map(function(f) {
    return ee.Feature(null, f.toDictionary()).set({
      'cell_id': f.get('cell_id'),
      'year': startMonth.get('year'),
      'month': startMonth.get('month'),
      'ADM1_NAME': f.get('ADM1_NAME'),
      'ADM2_NAME': f.get('ADM2_NAME')
    });
  });

  return reduced;
});

// === STEP 6: Flatten + Export Without Geometry ===
var allResults = ee.FeatureCollection(monthlyResults).flatten();

Export.table.toDrive({
  collection: allResults,
  description: 'SyriaGrid_EnvVars_Monthly',
  fileFormat: 'CSV'
});
